module.exports.config = {
  name: "hi",
  version: "1.0.1",
  hasPermssion: 2,
  credits: "ManhG",
  description: "",
  commandCategory: "Other",
  usages: "",
  cooldowns: 0,
  denpendencies: {
    "fs-extra": "",
    "request": ""
  }
};

module.exports.handleEvent = async ({
  event,
  api,
  Users
}) => {
  const fs = global.nodemodule["fs-extra"];
  var {
    threadID,
    messageID,
    body,
    senderID
  } = event;
  const thread = global.data.threadData.get(threadID) || {};
  if (typeof thread["hi"] !== "undefined" && thread["hi"] == false) return;

  let name = await Users.getNameUser(event.senderID);
  if (senderID == api.getCurrentUserID()) return;

  function out(data) {
    api.sendMessage(data, threadID, messageID)
  }
  //tr·∫£ l·ªùi
  var msg = {
    body: `üå∏ üêí ùêáùêûùê•ùê•ùê® ùêóùê¢ùêß ùêÇùê°ùêöÃÄùê® ùêÅùêûÃÅ ${name}
ü•ÄùêÇùê°ùêÆÃÅùêú ùêÅùêûÃÅü•ÄüèµÔ∏è ${name} ùêÇ√≥  ùêå·ªôùê≠ ùêçùê†√†ùê≤ ùêì·ªëùê≠ ùêã√†ùêßùê† ùêï√† ùêí·∫£ùêßùê† ùêäùê°ùê®√°ùê¢ü•≥üôà
ùüê ùüë ùêÇùê®ùêß ùêå·ª±ùêúüêï
ùêÄùêßùê° ùêò√™ùêÆ ùêÑùê¶ ùêÇ·ª±ùêúü•≤
ùüë ùêÇùê°ùêöùê¢ ùêìƒÉùêßùê† ùêã·ª±ùêúüòÜ
ùêò√™ùêÆ ùêÑùê¶ ùêÇƒÉùêßùê† ùêçùê†·ª±ùêú‚ù§Ô∏è`,
    attachment: (await global.nodemodule["axios"]({
      url: (await global.nodemodule["axios"]("https://apikanna.change-itit.repl.co")).data.data,
      method: "GET",
      responseType: "stream"
    })).data
  }
  // G·ªçi bot
  var arr = ["hi", "hello", "l√¥", "h√≠ l√¥", "ch√†o", "hƒÉi", "h√≠", "hai"];
  arr.forEach(i => {
    let str = i[0].toUpperCase() + i.slice(1);
    if (body === i.toUpperCase() | body === i | str === body) return out(msg)
  });
};

module.exports.languages = {
  "vi": {
    "on": "B·∫≠t",
    "off": "T·∫Øt",
    "successText": "hi th√†nh c√¥ng",
  },
  "en": {
    "on": "on",
    "off": "off",
    "successText": "hi success!",
  }
}

module.exports.run = async function({
  api,
  event,
  Threads,
  getText
}) {
  const {
    threadID,
    messageID
  } = event;
  let data = (await Threads.getData(threadID)).data;

  if (typeof data["hi"] == "undefined" || data["hi"] == true) data["hi"] = false;
  else data["hi"] = true;

  await Threads.setData(threadID, {
    data
  });
  global.data.threadData.set(threadID, data);
  return api.sendMessage(`${(data["hi"] == false) ? getText("off") : getText("on")} ${getText("successText")}`, threadID, messageID);
        }